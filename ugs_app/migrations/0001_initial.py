# Generated by Django 5.0.3 on 2024-11-18 15:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fight',
            fields=[
                ('f_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('f_code', models.CharField(blank=True, max_length=10, null=True)),
                ('f_number', models.IntegerField(blank=True, null=True)),
                ('f_multiplier', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('f_winner', models.CharField(blank=True, max_length=100, null=True)),
                ('f_longest', models.IntegerField(default=0)),
                ('f_status', models.CharField(choices=[('OPEN', 'OPEN'), ('CLOSED', 'CLOSED'), ('CLOSING', 'CLOSING'), ('DONE', 'DONE'), ('LAST CALL', 'LAST CALL'), ('DECLARED', 'DECLARED')], max_length=50, null=True)),
                ('f_update', models.DateTimeField(auto_now=True)),
                ('f_created', models.DateTimeField(auto_now_add=True)),
                ('f_tblrows', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-f_created'],
            },
        ),
        migrations.CreateModel(
            name='Games',
            fields=[
                ('g_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('g_name', models.CharField(blank=True, max_length=50)),
                ('g_redname', models.CharField(blank=True, max_length=50)),
                ('g_bluename', models.CharField(blank=True, max_length=50)),
                ('g_plasada', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('g_desc', models.CharField(blank=True, max_length=100)),
                ('g_category', models.CharField(choices=[('E-SABONG', 'E-SABONG'), ('E-SPORTS', 'E-SPORTS'), ('E-PERYA', 'E-PERYA'), ('E-MOVIES', 'E-MOVIES')], max_length=50, null=True)),
                ('g_link', models.CharField(blank=True, max_length=1000)),
                ('g_image', models.ImageField(blank=True, null=True, upload_to='uploads')),
                ('g_status', models.CharField(choices=[('OPEN', 'OPEN'), ('CLOSED', 'CLOSED')], default='CLOSED', max_length=50)),
                ('g_by', models.CharField(blank=True, max_length=100)),
                ('g_update', models.DateTimeField(auto_now=True)),
                ('g_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('g_col', models.IntegerField(default=1)),
            ],
            options={
                'get_latest_by': ('-g_created',),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConvertRewards',
            fields=[
                ('r_id', models.AutoField(primary_key=True, serialize=False)),
                ('r_code', models.CharField(blank=True, max_length=50, null=True)),
                ('r_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('r_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('r_date', models.DateTimeField(auto_now=True)),
                ('r_status', models.IntegerField(default=0)),
                ('r_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='r_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('c_id', models.AutoField(primary_key=True, serialize=False)),
                ('c_player', models.CharField(max_length=100)),
                ('c_agent', models.CharField(default='', max_length=100)),
                ('c_fnumber', models.CharField(default=0, max_length=50)),
                ('c_betamnt', models.CharField(max_length=50)),
                ('c_winner', models.CharField(max_length=50)),
                ('c_commission', models.CharField(max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('c_event', models.CharField(default='', max_length=101)),
                ('c_eventid', models.CharField(default='', max_length=101)),
                ('c_bet', models.CharField(default='', max_length=50)),
                ('c_level', models.CharField(default=0, max_length=50)),
                ('c_fight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='ugs_app.fight')),
            ],
        ),
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(blank=True)),
                ('winning_amnt', models.CharField(default=0, max_length=50)),
                ('won_amnt', models.CharField(default=0, max_length=100)),
                ('winStat', models.CharField(default=0, max_length=100)),
                ('category', models.CharField(choices=[('MERON', 'MERON'), ('WALA', 'WALA'), ('DRAW', 'DRAW'), ('LONGEST', 'LONGEST')], max_length=50, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('WIN', 'WIN'), ('LOSE', 'LOSE'), ('CANCELLED', 'CANCELLED'), ('DRAW', 'DRAW')], default='PENDING', max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('fightno', models.IntegerField(default=0)),
                ('longest', models.IntegerField(default=0)),
                ('event', models.CharField(default='', max_length=100)),
                ('walletbal', models.CharField(default=0, max_length=50)),
                ('waltotal', models.CharField(default=0, max_length=50)),
                ('eventid', models.CharField(default='', max_length=100)),
                ('player', models.ForeignKey(default=uuid.uuid4, on_delete=django.db.models.deletion.CASCADE, related_name='player', to=settings.AUTH_USER_MODEL)),
                ('fight', models.ForeignKey(default=uuid.uuid4, on_delete=django.db.models.deletion.CASCADE, related_name='fight', to='ugs_app.fight')),
            ],
        ),
        migrations.CreateModel(
            name='FightHistory',
            fields=[
                ('f_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('f_code', models.CharField(blank=True, max_length=10, null=True)),
                ('f_number', models.IntegerField(blank=True, null=True)),
                ('f_multiplier', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('f_winner', models.CharField(blank=True, max_length=100, null=True)),
                ('f_longest', models.IntegerField(default=0)),
                ('f_status', models.CharField(choices=[('OPEN', 'OPEN'), ('CLOSED', 'CLOSED'), ('CLOSING', 'CLOSING'), ('DONE', 'DONE'), ('LAST CALL', 'LAST CALL'), ('DECLARED', 'DECLARED')], max_length=50, null=True)),
                ('f_update', models.DateTimeField(auto_now=True)),
                ('f_created', models.DateTimeField(auto_now_add=True)),
                ('f_tblrows', models.IntegerField(default=0)),
                ('f_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fight_history', to='ugs_app.games')),
            ],
            options={
                'ordering': ['-f_created'],
            },
        ),
        migrations.AddField(
            model_name='fight',
            name='f_game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game', to='ugs_app.games'),
        ),
        migrations.CreateModel(
            name='Longestfight',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('l_amount', models.IntegerField(blank=True)),
                ('l_won_amnt', models.CharField(default=0, max_length=100)),
                ('l_category', models.CharField(choices=[('LONGEST', 'LONGEST')], max_length=50, null=True)),
                ('l_status', models.CharField(choices=[('WAITING', 'WAITING'), ('CLAIMED', 'CLAIMED')], default='WAITING', max_length=50)),
                ('l_fightno', models.IntegerField(default=0)),
                ('l_created', models.DateTimeField(auto_now_add=True)),
                ('l_event', models.CharField(default='', max_length=100)),
                ('l_walletbal', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('l_waltotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('l_eventid', models.CharField(default='', max_length=100)),
                ('l_fight', models.ForeignKey(default=uuid.uuid4, on_delete=django.db.models.deletion.CASCADE, related_name='l_fight', to='ugs_app.fight')),
                ('l_player', models.ForeignKey(default=uuid.uuid4, on_delete=django.db.models.deletion.CASCADE, related_name='l_player', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Points',
            fields=[
                ('p_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('p_code', models.CharField(blank=True, max_length=50, null=True)),
                ('p_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('p_created', models.DateTimeField(auto_now_add=True)),
                ('p_update', models.DateTimeField(auto_now=True)),
                ('p_processby', models.CharField(blank=True, max_length=100, null=True)),
                ('p_transtype', models.CharField(blank=True, max_length=20, null=True)),
                ('p_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('p_receiver', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='p_userkey', to=settings.AUTH_USER_MODEL)),
                ('p_sender', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='p_headKey', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stakefund',
            fields=[
                ('s_id', models.AutoField(primary_key=True, serialize=False)),
                ('s_code', models.CharField(blank=True, max_length=50, null=True)),
                ('s_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('s_date', models.DateTimeField(auto_now=True)),
                ('s_status', models.IntegerField(default=0)),
                ('s_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakefund_sender', to=settings.AUTH_USER_MODEL)),
                ('s_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakefund_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_no', models.CharField(default='00000000000', max_length=11, null=True)),
                ('relpass', models.CharField(blank=True, max_length=50, null=True)),
                ('referral_code', models.CharField(blank=True, max_length=200, null=True)),
                ('referral_link', models.CharField(blank=True, max_length=200, null=True)),
                ('usertype', models.CharField(choices=[('SUPER ADMIN', 'SUPER ADMIN'), ('ADMIN', 'ADMIN'), ('DECLARATOR', 'DECLARATOR'), ('MASTER OPERATOR', 'MASTER OPERATOR'), ('INCORPORATOR', 'INCORPORATOR'), ('SUB ADMIN', 'SUB ADMIN'), ('SUB OPERATOR', 'SUB OPERATOR'), ('MASTER AGENT', 'MASTER AGENT'), ('PLAYER', 'PLAYER')], default='ADMIN', max_length=50)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE'), ('BANNED', 'BANNED')], default='ACTIVE', max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_agent', models.ForeignKey(default=uuid.uuid4, on_delete=django.db.models.deletion.CASCADE, related_name='agent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('w_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('w_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_points', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_betwins', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_betlong', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE'), ('BANNED', 'BANNED')], default='ACTIVE', max_length=50)),
                ('w_dateupdate', models.DateTimeField(auto_now=True)),
                ('commission_rate', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('default_rate', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('wallet_out', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('comms_claimed', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_stakebal', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_stakecom', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_stake_active', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_stake_earning', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_stake_out', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_stake_available', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_comms_bal', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('w_uplinecom', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UWalletCashout',
            fields=[
                ('cw_id', models.AutoField(primary_key=True, serialize=False)),
                ('cw_code', models.CharField(blank=True, max_length=50, null=True)),
                ('cw_bal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cw_out', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cw_remaining', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cw_update', models.DateTimeField(auto_now=True)),
                ('cw_created', models.DateTimeField(auto_now_add=True)),
                ('cw_agentid', models.CharField(blank=True, max_length=100, null=True)),
                ('cw_stat', models.CharField(default=0, max_length=50)),
                ('cw_approved', models.CharField(blank=True, max_length=100, null=True)),
                ('cw_appdate', models.CharField(blank=True, max_length=20, null=True)),
                ('cw_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cw_player', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
